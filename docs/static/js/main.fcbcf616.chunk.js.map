{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGift.js","components/GifGrid.js","hooks/useFechHook.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","event","preventDefault","element","alert","type","style","padding","placeholder","value","onChange","target","GifGridItem","title","url","className","src","alt","getGif","category","a","encodeURI","fetch","resp","json","data","gift","map","id","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFechHook","color","toUpperCase","img","GifExpertApp","saludo","categories","divRoot","document","getElementById","ReactDOM","render"],"mappings":"4KAwDeA,EAnDK,SAAC,GACpB,IADuBC,EACxB,EADwBA,cACxB,EAE0CC,mBAAU,IAFpD,mBAEYC,EAFZ,KAEwBC,EAFxB,KA6BI,OAEI,sBAAMC,SAtBW,SAAEC,GAEnBA,EAAMC,iBAEa,KAAfJ,GAEAF,GAAe,SAAEO,GAAF,OAAiBL,GAAjB,mBAAgCK,OAE/CJ,EAAe,KAIfK,MAAM,yBAUV,SAEG,uBAAOC,KAAK,OAAOC,MAAQ,CAAEC,QAAU,IAAOC,YAAY,kBAAkBC,MAAQX,EAAaY,SA7B9E,SAAET,GAExBF,EAAeE,EAAMU,OAAOF,a,QCQrBG,EAfK,SAAC,GACpB,IADuBC,EACxB,EADwBA,MAAMC,EAC9B,EAD8BA,IAG1B,OAEI,qBAAKC,UAAU,yCAAf,SAEI,iCAAQ,qBAAKC,IAAMF,EAAMG,IAAMJ,S,uBCV9BK,EAAM,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAGbN,EAHa,iDAGoCO,UAAWF,GAH/C,+DAIAG,MAAOR,GAJP,cAIbS,EAJa,gBAKIA,EAAKC,OALT,uBAKXC,EALW,EAKXA,KAEFC,EAAOD,EAAKE,KAAK,SAAExB,GAGrB,MAAM,CAEFyB,GAAIzB,EAAQyB,GACZf,MAAOV,EAAQU,MACfC,IAAKX,EAAQ0B,OAAOC,iBAAiBhB,QAd1B,kBAoBZY,GApBY,4CAAH,sDCkCJK,EA7BC,SAAC,GACf,IADkBZ,EACnB,EADmBA,SACnB,ECH0B,SAAEA,GAGzB,IAFJ,EAQgCtB,mBAL5B,CACI4B,KAAK,GACLO,SAAQ,IALhB,mBAQYC,EARZ,KAQmBC,EARnB,KAgCI,OAtBAC,qBAAW,WAGPjB,EAAQC,GAAWiB,MAAM,SAAAC,GAErBC,YAAY,WAGRJ,EAEI,CACIT,KAAMY,EACNL,SAAS,MAInB,UAIR,CAAEb,IAEGc,ED5B0BM,CAAapB,GAAjCU,EAFhB,EAEWJ,KAAaO,EAFxB,EAEwBA,QAIrB,OAEI,qCAEI,oBAAI1B,MAAQ,CAAEkC,MAAQ,SAAtB,SAAoC,KAAKrB,EAASsB,gBAEhDT,GAAW,mBAAG1B,MAAQ,CAAEkC,MAAQ,SAArB,yBAEb,qBAAKzB,UAAU,WAAf,SAEMc,EAAOF,KAAK,SAAEe,GAAF,OAAW,cAAC,EAAD,eAAiCA,GAAdA,EAAId,SAIpD,2BEYGe,EAhCM,SAAC,GACtB,EADwBC,OACvB,IAAD,EAE0C/C,mBAAU,CAAE,SAFtD,mBAEYgD,EAFZ,KAEwBjD,EAFxB,KAMI,OAEI,qCAEI,cAAC,EAAD,CAAaA,cAAgBA,IAE7B,uBACA,uBAEEiD,EAAWlB,KAAK,SAAExB,GAAF,OAAc,cAAC,EAAD,CAAyBgB,SAAWhB,GAArBA,UCjBrD2C,EAAUC,SAASC,eAAe,QAExCC,IAASC,OAAQ,cAAC,EAAD,CAAcN,OAAO,SAAWE,I","file":"static/js/main.fcbcf616.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\n///////////////////\n\nconst AddCategory = ( { setCategories } ) => \n{\n\n    const [ inputValue, setInputValue ] = useState( \"\" );\n\n    const handleInputChange = ( event ) =>\n    {\n        setInputValue( event.target.value );\n    };\n\n    const handleSubmit = ( event ) =>\n    {\n        event.preventDefault();\n\n        if( inputValue !== \"\" )\n        {\n            setCategories( ( element ) => [ inputValue, ...element ] );\n\n            setInputValue( \"\" );\n        }\n        else\n        {\n            alert(\"Category is required\");\n        }\n\n    };\n\n\n/********************************************************************************************* */\n\n    return (\n        \n        <form onSubmit={ handleSubmit }>\n \n           <input type=\"text\" style={ { padding : 10 } } placeholder=\"Insert category\" value={ inputValue } onChange={ handleInputChange }/>\n\n        </form>\n    );\n};\n\n//////////////////////\n\nAddCategory.propTypes = \n{\n\n    setCategories: PropTypes.func.isRequired\n\n};\n\n/////////////////////////\n\nexport default AddCategory;\n","import React from 'react'\nimport \"../../src/index.css\";\n\n////////////////\n\nconst GifGridItem = ( { title,url } ) => \n{\n\n    return (\n\n        <div className=\"card animate__animated animate__bounce\">\n            \n            <center><img src={ url } alt={ title }/></center>\n\n        </div>\n    );\n};\n\n//////////////////\n\nexport default GifGridItem;\n","\n\nexport const getGif = async( category ) =>\n{\n    \n   const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=3GlnadtHZyuefwy3SWy2IsuOIiHUozp2`;\n   const resp = await fetch( url );\n   const { data } = await resp.json();\n\n   const gift = data.map( ( element ) =>\n   {\n\n       return{\n\n           id: element.id,\n           title: element.title,\n           url: element.images.downsized_medium.url\n\n       }\n\n   });\n\n   return gift;\n\n};","import React from 'react'\nimport GifGridItem from './GifGridItem';\nimport \"../../src/index.css\";\nimport { useFechHook } from '../hooks/useFechHook';\n\n////////////////////\n\nconst GifGrid = ( { category } ) =>\n {\n\n    const { data:images, loading } = useFechHook( category );\n\n/********************************************************************************************* */\n\n    return (\n       \n        <>\n\n            <h3 style={ { color : \"white\" } }>{ \"# \"+category.toUpperCase() }</h3>\n\n            { loading && <p style={ { color : \"white\" } }>Cargando...</p> }\n\n            <div className=\"cardGrid\">\n            \n                { images.map( ( img ) => <GifGridItem key={ img.id } { ...img } /> ) }\n                \n            </div>\n\n            <hr/>\n\n        </>\n    );\n};\n\n////////////////////////////\n\nexport default GifGrid;\n","import { useEffect, useState } from \"react\"\nimport { getGif } from \"../helpers/getGift\";\n\n////////\n\nexport const useFechHook = ( category ) =>\n{\n\n    const initialState = \n    {\n        data:[],\n        loading:true\n    };\n\n    const [ state, setState ] = useState( initialState );\n\n    useEffect( () => \n    {\n\n        getGif( category ).then( imgs => {\n                \n            setTimeout( () =>\n            {\n\n                setState(\n\n                    {\n                        data: imgs,\n                        loading: false\n                    }\n                ); \n\n            },3000)\n\n        })\n\n    },[ category ]);\n        \n    return state;\n\n};","import React, { useState } from 'react';\nimport PropTypes from 'prop-types'\nimport \"../src/index.css\";\nimport AddCategory from './components/AddCategory';\nimport GifGrid from './components/GifGrid';\n\n//////////////////////////////////////////////////////////////////////////////////\n\nconst GifExpertApp = ( {saludo} ) => \n{\n    \n    const [ categories, setCategories ] = useState( [ \"html\" ] );\n\n/***************************************************************************************************** */\n\n    return(\n\n        <>\n\n            <AddCategory setCategories={ setCategories }/>\n\n            <br/>\n            <hr/>\n\n            { categories.map( ( element )=> <GifGrid key={ element } category={ element } /> ) }\n\n        </>\n    );\n\n};\n\n/////////////////////////////////////////////////////////////////////////////\n\nGifExpertApp.propTypes = \n{\n    saludo:PropTypes.string.isRequired\n};\n\n///////////////////////////////////////////////////////////////////////////////\n\nexport default GifExpertApp;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from \"../src/GifExpertApp\";\n\n///////////////////////////////////////////////////////\n\n\nconst divRoot = document.getElementById(\"root\");\n\nReactDOM.render( <GifExpertApp saludo=\"hola\"/> , divRoot );\n"],"sourceRoot":""}