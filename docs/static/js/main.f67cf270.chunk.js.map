{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGift.js","components/GifGrid.js","hooks/useFechHook.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","event","preventDefault","element","alert","type","value","onChange","target","GifGridItem","title","url","className","src","alt","getGif","category","a","encodeURI","fetch","resp","json","data","gift","map","id","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFechHook","img","GifExpertApp","saludo","categories","divRoot","document","getElementById","ReactDOM","render"],"mappings":"4KAgDeA,EA5CK,SAAC,GACpB,IADqBC,EACtB,EADsBA,cACtB,EAEwCC,mBAAS,IAFjD,mBAEWC,EAFX,KAEuBC,EAFvB,KA0BI,OAEI,sBAAMC,SAnBW,SAACC,GAElBA,EAAMC,iBAEW,IAAdJ,GAECF,GAAc,SAACO,GAAD,OAAYL,GAAZ,mBAA0BK,OACxCJ,EAAc,KAIdK,MAAM,kCAQV,SAEG,uBAAOC,KAAK,OAAOC,MAAOR,EAAYS,SA1BnB,SAACN,GAEvBF,EAAcE,EAAMO,OAAOF,a,QCapBG,EApBK,SAAC,GACpB,IADqBC,EACtB,EADsBA,MAAMC,EAC5B,EAD4BA,IAGxB,OAEI,sBAAKC,UAAU,yCAAf,UAEI,iCAAQ,qBAAKC,IAAKF,EAAKG,IAAKJ,MAC5B,uBACA,uBACA,4BAAIA,Q,uBCZHK,EAAM,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbN,EAFa,iDAEoCO,UAAUF,GAF9C,+DAGAG,MAAMR,GAHN,cAGbS,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAI,SAACrB,GAEnB,MAAM,CAEFsB,GAAItB,EAAQsB,GACZf,MAAOP,EAAQO,MACfC,IAAKR,EAAQuB,OAAOC,iBAAiBhB,QAZ1B,kBAkBZY,GAlBY,4CAAH,sDCkCJK,EA7BC,SAAC,GACf,IADgBZ,EACjB,EADiBA,SACjB,ECL0B,SAACA,GAC3B,IAAD,EAC8BnB,mBAAS,CAC/ByB,KAAK,GACLO,SAAQ,IAHhB,mBACWC,EADX,KACkBC,EADlB,KAsBI,OAhBAC,qBAAW,WAEPjB,EAAQC,GAAWiB,MAAM,SAAAC,GAErBC,YAAW,WAEPJ,EAAS,CACLT,KAAMY,EACNL,SAAS,MAEf,UAIR,CAACb,IAEIc,EDhByBM,CAAYpB,GAA/BU,EAFhB,EAEWJ,KAAYO,EAFvB,EAEuBA,QAEpB,OAEI,qCAEI,6BAAKb,IAEJa,GAAW,4CAEZ,qBAAKjB,UAAU,WAAf,SAEMc,EAAOF,KAAK,SAACa,GAAD,OAAO,cAAC,EAAD,eAA8BA,GAAZA,EAAIZ,aEW5Ca,EA1BM,SAAC,GACtB,EADuBC,OACtB,IAAD,EACwC1C,mBAAS,CAAC,UADlD,mBACW2C,EADX,KACuB5C,EADvB,KAGI,OAEI,qCACI,4CAEA,cAAC,EAAD,CAAaA,cAAeA,IAE5B,uBAEE4C,EAAWhB,KAAK,SAACrB,GAAD,OAAY,cAAC,EAAD,CAAuBa,SAAUb,GAAnBA,UCVlDsC,EAAUC,SAASC,eAAe,QAExCC,IAASC,OAAO,cAAC,EAAD,CAAcN,OAAO,SAAWE,I","file":"static/js/main.f67cf270.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nconst AddCategory = ({setCategories}) => \r\n{\r\n\r\n    const [inputValue, setInputValue] = useState(\"\");\r\n\r\n    const handleInputChange = (event) =>\r\n    {\r\n        setInputValue(event.target.value);// event.target.value toma el valor actual que contine el input\r\n    }\r\n\r\n    const handleSubmit = (event) =>\r\n    {\r\n        event.preventDefault();//evita que el navegador se refresque\r\n\r\n        if(inputValue != \"\")\r\n        {\r\n            setCategories((element)=>[inputValue,...element]);\r\n            setInputValue(\"\");\r\n        }\r\n        else\r\n        {\r\n            alert(\"no se ingresan valores vacios\");\r\n        }\r\n\r\n    } \r\n\r\n\r\n    return (\r\n        \r\n        <form onSubmit={ handleSubmit }>\r\n \r\n           <input type=\"text\" value={inputValue} onChange={ handleInputChange }/>\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nAddCategory.propTypes = {\r\n\r\n    setCategories: PropTypes.func.isRequired\r\n\r\n}\r\n\r\nexport default AddCategory\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport \"../../src/index.css\";\r\n\r\nconst GifGridItem = ({title,url}) => \r\n{\r\n\r\n    return (\r\n\r\n        <div className=\"card animate__animated animate__bounce\">\r\n            \r\n            <center><img src={url} alt={title}/></center>\r\n            <hr/>\r\n            <hr/>\r\n            <p>{title}</p>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nGifGridItem.propTypes = {\r\n\r\n}\r\n\r\nexport default GifGridItem\r\n","\r\n\r\nexport const getGif = async(category) =>\r\n{\r\n   const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=3GlnadtHZyuefwy3SWy2IsuOIiHUozp2`;\r\n   const resp = await fetch(url);\r\n   const { data } = await resp.json();\r\n\r\n   const gift = data.map((element)=>{\r\n\r\n       return{\r\n\r\n           id: element.id,\r\n           title: element.title,\r\n           url: element.images.downsized_medium.url\r\n\r\n       }\r\n\r\n   })\r\n\r\n   return gift;\r\n}","import React from 'react'\r\n//import React, { useState,useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport GifGridItem from './GifGridItem';\r\nimport \"../../src/index.css\";\r\nimport { useFechHook } from '../hooks/useFechHook';\r\n\r\nconst GifGrid = ({category}) =>\r\n {\r\n\r\n    const { data:images,loading } = useFechHook(category);\r\n\r\n    return (\r\n       \r\n        <>\r\n\r\n            <h3>{category}</h3>\r\n\r\n            {loading && <p>Cargando...</p>}\r\n\r\n            <div className=\"cardGrid\">\r\n            \r\n                { images.map( (img)=><GifGridItem key={img.id} {...img} /> ) }\r\n                \r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nGifGrid.propTypes = {\r\n\r\n}\r\n\r\n\r\nexport default GifGrid\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGif } from \"../helpers/getGift\";\r\n\r\nexport const useFechHook = (category) =>\r\n{\r\n    const [state, setState] = useState({\r\n        data:[],/////asdasdsad\r\n        loading:true\r\n    });\r\n\r\n    useEffect( () => {\r\n\r\n        getGif( category ).then( imgs => {\r\n                \r\n            setTimeout(()=>{\r\n\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n            },3000)\r\n\r\n        })\r\n\r\n    },[category])\r\n        \r\n    return state;\r\n}","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport \"../src/index.css\";\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\n\r\nconst GifExpertApp = ({saludo}) => \r\n{\r\n    const [categories, setCategories] = useState([\"Samus\"]);\r\n\r\n    return(\r\n\r\n        <>\r\n            <h2>GIF-Expert</h2>\r\n\r\n            <AddCategory setCategories={setCategories}/>\r\n\r\n            <hr/>\r\n\r\n            { categories.map( (element)=> <GifGrid key={element} category={element} /> ) }\r\n                \r\n\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nGifExpertApp.propTypes = \r\n{\r\n    saludo:PropTypes.string.isRequired\r\n}\r\n\r\nexport default GifExpertApp\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from \"../src/GifExpertApp\";\n\n\n\n\n\n\n\nconst divRoot = document.getElementById(\"root\");\n\nReactDOM.render(<GifExpertApp saludo=\"hola\"/> , divRoot);\n"],"sourceRoot":""}